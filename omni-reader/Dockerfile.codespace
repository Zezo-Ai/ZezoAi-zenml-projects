# Sandbox base image
FROM zenmldocker/zenml-sandbox@sha256:bc9716318ac1441ab4887f5824979ac0653dcae54f667d5435d08b369d057e88

# Install uv from official distroless image
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Set uv environment variables for optimization
ENV UV_SYSTEM_PYTHON=1
ENV UV_COMPILE_BYTECODE=1

# Project metadata
LABEL project_name="omni-reader"
LABEL project_version="0.1.0"

# Install dependencies with uv and cache optimization
RUN --mount=type=cache,target=/root/.cache/uv \
    uv pip install --system \
    "instructor" \
    "jiwer" \
    "jiter" \
    "importlib-metadata<7.0,>=1.4.0" \
    "litellm" \
    "mistralai==1.0.3" \
    "numpy<2.0,>=1.9.0" \
    "openai==1.69.0" \
    "Pillow==11.1.0" \
    "polars-lts-cpu==1.26.0" \
    "pyarrow>=7.0.0" \
    "python-dotenv" \
    "streamlit==1.44.0" \
    "pydantic>=2.8.2,<2.9.0" \
    "tqdm==4.66.4" \
    "zenml>=0.80.0"

# Set workspace directory
WORKDIR /workspace

# Clone only the project directory and reorganize
RUN git clone --depth 1 https://github.com/zenml-io/zenml-projects.git /tmp/zenml-projects && \
    cp -r /tmp/zenml-projects/omni-reader/* /workspace/ && \
    rm -rf /tmp/zenml-projects

# VSCode settings
RUN mkdir -p /workspace/.vscode && \
    printf '{\n  "workbench.colorTheme": "Default Dark Modern"\n}' > /workspace/.vscode/settings.json

# Copy .env.example
COPY .env.example /workspace/.env
ENV POLARS_SKIP_CPU_CHECK=1
